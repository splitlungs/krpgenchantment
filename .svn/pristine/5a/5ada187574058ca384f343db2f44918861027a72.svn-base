using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Vintagestory.API.Common;
using Vintagestory.API.Datastructures;
using HarmonyLib;
using System.Reflection;
using Vintagestory.API.Server;
using Vintagestory.GameContent;
using Vintagestory.API.Config;
using Newtonsoft.Json.Linq;

namespace KRPGLib.Enchantment
{
    public class KRPGEnchantmentSystem : ModSystem
    {
        ICoreAPI Api;
        
        /// <summary>
        /// List of all loaded Enchanting recipes
        /// </summary>
        public override void Start(ICoreAPI api)
        {
            base.Start(api);
            Api = api;
            api.RegisterItemClass("ReagentItem", typeof(ReagentItem));
            api.RegisterCollectibleBehaviorClass("EnchantmentBehavior", typeof(EnchantmentBehavior));
            api.RegisterBlockClass("EnchantingBlock", typeof(EnchantingBlock));
            api.RegisterBlockEntityClass("EnchantingBE", typeof(EnchantingBE));
            // EnchantingRecipeSystem ers = api.ModLoader.GetModSystem<EnchantingRecipeSystem>();
            // ers.LoadEnchantingRecipes(api);
            DoHarmonyPatch(api);
            Api.Logger.Event("KRPG Enchantment loaded.");
        }
        private static void DoHarmonyPatch(ICoreAPI api)
        {
            if (KRPGEnchantmentSystem.harmony == null)
            {
                KRPGEnchantmentSystem.harmony = new Harmony("KRPGEnchantmentPatch");
                KRPGEnchantmentSystem.harmony.PatchAll(Assembly.GetExecutingAssembly());
            }
        }

        private static Harmony harmony;

        private void TestAttributes()
        {
            // Setting and getting values
            TreeAttribute tree;
            tree = new TreeAttribute();

            float someValue = 0.35f;
            string someKey = "valueKey";

            // Set the value
            tree.SetFloat(someKey, someValue);
            // Retrieve the value
            tree.GetFloat(someKey);
        }
    }
}
